{
  "percentage": [
    {
      "prototypeExpressions": [
        "10% of 100"
      ],
      "identifier": "percentOf"
    },
    {
      "prototypeExpressions": [
        "10% off 100"
      ],
      "identifier": "percentOff"
    },
    {
      "prototypeExpressions": [
        "10% on 100"
      ],
      "identifier": "percentOn"
    },
    {
      "prototypeExpressions": [
        "30 is 20% of what"
      ],
      "identifier": "isPercentOfWhat"
    },
    {
      "prototypeExpressions": [
        "20% of what is 30"
      ],
      "identifier": "isPercentOfWhatClassic"
    },
    {
      "prototypeExpressions": [
        "30 is 20% off what"
      ],
      "identifier": "isPercentOffWhat"
    },
    {
      "prototypeExpressions": [
        "20% off what is 30"
      ],
      "identifier": "isPercentOffWhatClassic"
    },
    {
      "prototypeExpressions": [
        "30 is 20% on what"
      ],
      "identifier": "isPercentOnWhat"
    },
    {
      "prototypeExpressions": [
        "20% on what is 30"
      ],
      "identifier": "isPercentOnWhatClassic"
    },
    {
      "prototypeExpressions": [
        "10 is what % of 20",
        "10 as a % of 20",
        "10 as % of 20"
      ],
      "identifier": "isWhatPercentOf"
    },
    {
      "prototypeExpressions": [
        "10 is what % off 20",
        "10 as a % off 20",
        "10 as % off 20"
      ],
      "identifier": "isWhatPercentOff"
    },
    {
      "prototypeExpressions": [
        "20 is what % on 10",
        "20 as a % on 10",
        "20 as % on 10"
      ],
      "identifier": "isWhatPercentOn"
    }
  ],
  "general": [
    {
      "prototypeExpressions": [
        "remainder of 20 divided by 3"
      ],
      "identifier": "remainder"
    },
    {
      "prototypeExpressions": [
        "half of 20"
      ],
      "identifier": "halfOf"
    },
    {
      "prototypeExpressions": [
        "smaller of 2 and 30",
        "lesser of 2 and 30"
      ],
      "identifier": "lesserOf"
    },
    {
      "prototypeExpressions": [
        "larger of 2 and 30",
        "greater of 2 and 30"
      ],
      "identifier": "greaterOf"
    },
    {
      "prototypeExpressions": [
        "midpoint between 2 and 32"
      ],
      "identifier": "midpoint"
    },
    {
      "prototypeExpressions": [
        "6 is to 600 as what is to 8"
      ],
      "identifier": "proportionsFindNumerator"
    },
    {
      "prototypeExpressions": [
        "6 is to 600 as 8 is to what"
      ],
      "identifier": "proportionsFindDenominator"
    },
    {
      "prototypeExpressions": [
        "random number between 1 and 5",
        "random between 1 and 5"
      ],
      "identifier": "makeRandomNumber"
    }
  ],
  "unitRelated": [
    {
      "prototypeExpressions": [
        "__unit in __unit_expression"
      ],
      "identifier": "unitInUnitExpression"
    }
  ],
  "datetime": [
    {
      "prototypeExpressions": [
        "__unit between __datestamp and __datestamp",
        "__unit from __datestamp to __datestamp",
        "__unit in __datestamp to __datestamp"
      ],
      "identifier": "calendarUnitBetweenDates"
    },
    {
      "prototypeExpressions": [
        "__unit to __datestamp",
        "__unit before __datestamp",
        "__unit until __datestamp",
        "__unit till __datestamp"
      ],
      "identifier": "calendarUnitToDate"
    },
    {
      "prototypeExpressions": [
        "__datestamp to __datestamp"
      ],
      "identifier": "intervalBetweenDates"
    },
    {
      "identifier": "intervalBetweenTimestamps",
      "prototypeExpressions": [
        "__timestamp to __timestamp"
      ]
    },
    {
      "identifier": "calendarUnitSinceDate",
      "prototypeExpressions": [
        "__unit since __datestamp"
      ]
    },
    {
      "prototypeExpressions": [
        "__timespan from __datestamp",
        "__timespan after __datestamp"
      ],
      "identifier": "calendarUnitExpressionAfterDate"
    },
    {
      "prototypeExpressions": [
        "new timestamp"
      ],
      "identifier": "generateTimestamp"
    },
    {
      "identifier": "timeInTimezone",
      "prototypeExpressions": [
        "__timezone time",
        "time in __timezone"
      ]
    },
    {
      "prototypeExpressions": [
        "time difference between __timezone and __timezone",
        "difference between __timezone and __timezone",
        "time difference between __timezone & __timezone",
        "difference between __timezone & __timezone"
      ],
      "identifier": "differenceBetweenTimezones"
    }
  ]
}