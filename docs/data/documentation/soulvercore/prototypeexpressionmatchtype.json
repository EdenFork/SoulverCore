{"relationshipsSections":[{"identifiers":["doc:\/\/app.soulver.core\/SQ","doc:\/\/app.soulver.core\/SH"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"metadata":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrototypeExpressionMatchType"}],"roleHeading":"Enumeration","symbolKind":"enum","title":"PrototypeExpressionMatchType","externalID":"s:11SoulverCore28PrototypeExpressionMatchTypeO","navigatorTitle":[{"kind":"identifier","text":"PrototypeExpressionMatchType"}],"role":"symbol","modules":[{"name":"SoulverCore"}]},"sections":[],"identifier":{"url":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchType","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"PrototypeExpressionMatchType","kind":"identifier"}]}]}],"hierarchy":{"paths":[["doc:\/\/app.soulver.core\/documentation\/SoulverCore"]]},"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchType\/matchLiteralString","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchType\/matchTokenType","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchType\/matchUnitType"]},{"title":"Default Implementations","identifiers":["doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchType\/Equatable-Implementations"],"generated":true}],"seeAlsoSections":[{"identifiers":["doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpression","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypePlaceholder","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionGenerator","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchTypeHandler"],"generated":true,"title":"Defining new functions"}],"abstract":[{"type":"text","text":"Customize how a placeholder in a prototype expression matches"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/soulvercore\/prototypeexpressionmatchtype"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://app.soulver.core/documentation/SoulverCore/PrototypeExpressionMatchType/matchTokenType":{"kind":"symbol","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchType\/matchTokenType","url":"\/documentation\/soulvercore\/prototypeexpressionmatchtype\/matchtokentype","role":"symbol","type":"topic","title":"PrototypeExpressionMatchType.matchTokenType","abstract":[{"text":"a unit expression will be matched by any other unit expression","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"matchTokenType"}]},"doc://app.soulver.core/documentation/SoulverCore/PrototypePlaceholder":{"title":"PrototypePlaceholder","navigatorTitle":[{"text":"PrototypePlaceholder","kind":"identifier"}],"url":"\/documentation\/soulvercore\/prototypeplaceholder","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypePlaceholder","abstract":[{"text":"A type placeholder must be a single word with two underscores (__thing, __animal, etc)","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrototypePlaceholder"}],"type":"topic"},"doc://app.soulver.core/SH":{"identifier":"doc:\/\/app.soulver.core\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://app.soulver.core/SQ":{"identifier":"doc:\/\/app.soulver.core\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://app.soulver.core/documentation/SoulverCore/PrototypeExpressionGenerator":{"title":"PrototypeExpressionGenerator","navigatorTitle":[{"text":"PrototypeExpressionGenerator","kind":"identifier"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionGenerator","type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"PrototypeExpressionGenerator","kind":"identifier"}],"url":"\/documentation\/soulvercore\/prototypeexpressiongenerator","abstract":[{"type":"text","text":"Generate a SoulverCore prototype expression from the kind of expression you’d input in Soulver"}],"kind":"symbol"},"doc://app.soulver.core/documentation/SoulverCore/PrototypeExpressionMatchType/matchUnitType":{"role":"symbol","abstract":[{"text":"a unit expression will only match a unit expression with the unit type (like match only curriences for example)","type":"text"}],"url":"\/documentation\/soulvercore\/prototypeexpressionmatchtype\/matchunittype","title":"PrototypeExpressionMatchType.matchUnitType","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchType\/matchUnitType","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"matchUnitType","kind":"identifier"}],"type":"topic"},"doc://app.soulver.core/documentation/SoulverCore":{"kind":"symbol","role":"collection","url":"\/documentation\/soulvercore","abstract":[{"text":"A powerful natural language calculation engine","type":"text"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore","type":"topic","title":"SoulverCore"},"doc://app.soulver.core/documentation/SoulverCore/PrototypeExpressionMatchType/matchLiteralString":{"role":"symbol","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchType\/matchLiteralString","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"matchLiteralString","kind":"identifier"}],"title":"PrototypeExpressionMatchType.matchLiteralString","url":"\/documentation\/soulvercore\/prototypeexpressionmatchtype\/matchliteralstring","kind":"symbol","type":"topic","abstract":[{"text":"match the stringValue of the token literally, irregardless of type","type":"text"}]},"doc://app.soulver.core/documentation/SoulverCore/PrototypeExpressionMatchType":{"kind":"symbol","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchType","url":"\/documentation\/soulvercore\/prototypeexpressionmatchtype","role":"symbol","title":"PrototypeExpressionMatchType","type":"topic","abstract":[{"type":"text","text":"Customize how a placeholder in a prototype expression matches"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrototypeExpressionMatchType","kind":"identifier"}],"navigatorTitle":[{"text":"PrototypeExpressionMatchType","kind":"identifier"}]},"doc://app.soulver.core/documentation/SoulverCore/PrototypeExpressionMatchType/Equatable-Implementations":{"type":"topic","url":"\/documentation\/soulvercore\/prototypeexpressionmatchtype\/equatable-implementations","kind":"article","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchType\/Equatable-Implementations","abstract":[],"role":"collectionGroup","title":"Equatable Implementations"},"doc://app.soulver.core/documentation/SoulverCore/PrototypeExpression":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PrototypeExpression"}],"url":"\/documentation\/soulvercore\/prototypeexpression","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpression","title":"PrototypeExpression","type":"topic","abstract":[{"text":"A special “regex-like” SoulverCore string format that includes placeholders which represent types of tokens to match","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"PrototypeExpression","kind":"identifier"}]},"doc://app.soulver.core/documentation/SoulverCore/PrototypeExpressionMatchTypeHandler":{"title":"PrototypeExpressionMatchTypeHandler","navigatorTitle":[{"text":"PrototypeExpressionMatchTypeHandler","kind":"identifier"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchTypeHandler","type":"topic","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"PrototypeExpressionMatchTypeHandler","kind":"identifier"}],"url":"\/documentation\/soulvercore\/prototypeexpressionmatchtypehandler","abstract":[{"type":"text","text":"A handler where you provide the preferred match type for a given token"}],"kind":"symbol"}}}