{"metadata":{"modules":[{"name":"SoulverCore"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrototypeExpressionMatchType","kind":"identifier"}],"roleHeading":"Enumeration","navigatorTitle":[{"kind":"identifier","text":"PrototypeExpressionMatchType"}],"externalID":"s:11SoulverCore28PrototypeExpressionMatchTypeO","symbolKind":"enum","title":"PrototypeExpressionMatchType","role":"symbol"},"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchType","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"PrototypeExpressionMatchType","kind":"identifier"}]}]}],"relationshipsSections":[{"identifiers":["doc:\/\/app.soulver.core\/SQ","doc:\/\/app.soulver.core\/SH"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"variants":[{"paths":["\/documentation\/soulvercore\/prototypeexpressionmatchtype"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"title":"Defining new functions","generated":true,"identifiers":["doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpression","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypePlaceholder","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionGenerator","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchTypeHandler"]}],"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchType\/matchLiteralString","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchType\/matchTokenType","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchType\/matchUnitType"]},{"identifiers":["doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchType\/Equatable-Implementations"],"generated":true,"title":"Default Implementations"}],"hierarchy":{"paths":[["doc:\/\/app.soulver.core\/documentation\/SoulverCore"]]},"abstract":[{"type":"text","text":"Customize how a placeholder in a prototype expression matches"}],"references":{"doc://app.soulver.core/documentation/SoulverCore/PrototypePlaceholder":{"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypePlaceholder","role":"symbol","abstract":[{"type":"text","text":"A type placeholder must be a single word with two underscores (__thing, __animal, etc)"}],"navigatorTitle":[{"kind":"identifier","text":"PrototypePlaceholder"}],"url":"\/documentation\/soulvercore\/prototypeplaceholder","kind":"symbol","title":"PrototypePlaceholder","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrototypePlaceholder","kind":"identifier"}]},"doc://app.soulver.core/documentation/SoulverCore/PrototypeExpressionMatchType/matchUnitType":{"abstract":[{"text":"a unit expression will only match a unit expression with the unit type (like match only curriences for example)","type":"text"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchType\/matchUnitType","role":"symbol","title":"PrototypeExpressionMatchType.matchUnitType","url":"\/documentation\/soulvercore\/prototypeexpressionmatchtype\/matchunittype","kind":"symbol","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"matchUnitType","kind":"identifier"}]},"doc://app.soulver.core/SH":{"type":"unresolvable","identifier":"doc:\/\/app.soulver.core\/SH","title":"Swift.Hashable"},"doc://app.soulver.core/documentation/SoulverCore/PrototypeExpression":{"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/soulvercore\/prototypeexpression","title":"PrototypeExpression","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrototypeExpression","kind":"identifier"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpression","abstract":[{"text":"A special “regex-like” SoulverCore string format that includes placeholders which represent types of tokens to match","type":"text"}],"navigatorTitle":[{"text":"PrototypeExpression","kind":"identifier"}]},"doc://app.soulver.core/documentation/SoulverCore/PrototypeExpressionMatchType/matchTokenType":{"abstract":[{"type":"text","text":"a unit expression will be matched by any other unit expression"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchType\/matchTokenType","role":"symbol","title":"PrototypeExpressionMatchType.matchTokenType","url":"\/documentation\/soulvercore\/prototypeexpressionmatchtype\/matchtokentype","kind":"symbol","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"matchTokenType"}]},"doc://app.soulver.core/documentation/SoulverCore/PrototypeExpressionMatchType/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","kind":"article","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchType\/Equatable-Implementations","url":"\/documentation\/soulvercore\/prototypeexpressionmatchtype\/equatable-implementations","type":"topic","abstract":[]},"doc://app.soulver.core/SQ":{"type":"unresolvable","identifier":"doc:\/\/app.soulver.core\/SQ","title":"Swift.Equatable"},"doc://app.soulver.core/documentation/SoulverCore/PrototypeExpressionGenerator":{"navigatorTitle":[{"text":"PrototypeExpressionGenerator","kind":"identifier"}],"abstract":[{"text":"Generate a SoulverCore prototype expression from the kind of expression you’d input in Soulver","type":"text"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionGenerator","role":"symbol","title":"PrototypeExpressionGenerator","kind":"symbol","type":"topic","url":"\/documentation\/soulvercore\/prototypeexpressiongenerator","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrototypeExpressionGenerator","kind":"identifier"}]},"doc://app.soulver.core/documentation/SoulverCore/PrototypeExpressionMatchType":{"type":"topic","title":"PrototypeExpressionMatchType","kind":"symbol","role":"symbol","url":"\/documentation\/soulvercore\/prototypeexpressionmatchtype","abstract":[{"type":"text","text":"Customize how a placeholder in a prototype expression matches"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrototypeExpressionMatchType"}],"navigatorTitle":[{"text":"PrototypeExpressionMatchType","kind":"identifier"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchType"},"doc://app.soulver.core/documentation/SoulverCore":{"title":"SoulverCore","type":"topic","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore","abstract":[{"type":"text","text":"A powerful natural language calculation engine"}],"url":"\/documentation\/soulvercore","kind":"symbol","role":"collection"},"doc://app.soulver.core/documentation/SoulverCore/PrototypeExpressionMatchTypeHandler":{"kind":"symbol","role":"symbol","type":"topic","title":"PrototypeExpressionMatchTypeHandler","url":"\/documentation\/soulvercore\/prototypeexpressionmatchtypehandler","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrototypeExpressionMatchTypeHandler","kind":"identifier"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchTypeHandler","abstract":[{"text":"A handler where you provide the preferred match type for a given token","type":"text"}],"navigatorTitle":[{"text":"PrototypeExpressionMatchTypeHandler","kind":"identifier"}]},"doc://app.soulver.core/documentation/SoulverCore/PrototypeExpressionMatchType/matchLiteralString":{"title":"PrototypeExpressionMatchType.matchLiteralString","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"matchLiteralString","kind":"identifier"}],"url":"\/documentation\/soulvercore\/prototypeexpressionmatchtype\/matchliteralstring","kind":"symbol","abstract":[{"type":"text","text":"match the stringValue of the token literally, irregardless of type"}],"role":"symbol","type":"topic","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/PrototypeExpressionMatchType\/matchLiteralString"}}}