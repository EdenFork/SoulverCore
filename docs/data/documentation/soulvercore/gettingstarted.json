{"primaryContentSections":[{"content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To calculate the result of a single expression, use a "},{"isActive":true,"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Calculator","type":"reference"},{"type":"text","text":" object:"}]},{"code":["import SoulverCore","","let calculator = Calculator(customization: .standard)","let result = calculator.calculate(\"123 + 456\")","print(\"The answer is \\(result.stringValue)\") \/\/ prints 579"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SoulverCore can perform all sorts of calculations, including unit conversions, date & calendar math, rate calculations, percentage phrase functions, time zone conversions, and much more. It also cleverly ignores “meaningless” words:"}]},{"code":["calculator.calculate(\"$10 for lunch + 15% tip\") \/\/ $11.50","calculator.calculate(\"65 kg in pounds\") \/\/ 143.3 lb","calculator.calculate(\"40 as % of 90\") \/\/ 44.44%","calculator.calculate(\"$150 is 25% on what\") \/\/ $120","calculator.calculate(\"$25\/hour * 14 hours of work\") \/\/ $350.00","calculator.calculate(\"January 30 2020 + 3 months 2 weeks 5 days\") \/\/ May 19, 2020","calculator.calculate(\"9:35am in New York to Japan\") \/\/ 10:35 pm","calculator.calculate(\"$25k over 10 years at 7.5%\") \/\/ $51,525.79 (compound interest)"],"type":"codeListing","syntax":"swift"},{"type":"heading","text":"Variables","anchor":"Variables","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use a "},{"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/VariableList","isActive":true,"type":"reference"},{"type":"text","text":" to set values for words or phrases in your expression:"}]},{"type":"codeListing","syntax":"swift","code":["let variableList = VariableList(variables:","    [","        Variable(name: \"a\", value: \"123\"),","        Variable(name: \"b\", value: \"456\"),","    ]",")","calculator.calculate(\"a + b\", with: variableList) \/\/ 579        "]},{"anchor":"Locale-Settings","text":"Locale Settings","level":2,"type":"heading"},{"inlineContent":[{"text":"SoulverCore respects the decimal separator and thousands separator of the system locale. Alternatively, you can convert the standard EngineCustomization to another locale:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let europeanLocale = Locale(identifier: \"en_DE\")","let localizedCustomization = EngineCustomization.standard.convertTo(locale: europeanLocale)","","let calculator = Calculator(customization: localizedCustomization)",""," \/\/\/ In Germany a comma is used as a decimal separator","calculator.calculate(\"1,2 + 3,4\") \/\/ 4,6"],"type":"codeListing"},{"level":2,"type":"heading","text":"Output Formatting","anchor":"Output-Formatting"},{"type":"paragraph","inlineContent":[{"text":"Use a ","type":"text"},{"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/FormattingPreferences","isActive":true,"type":"reference"},{"type":"text","text":" to customize the way your result is formatted (how many decimal places to include, should the thousands separator be inserted, etc)."}]},{"type":"codeListing","syntax":"swift","code":["var formattingPreferences = FormattingPreferences()","formattingPreferences.dp = 2 \/\/ decimal places","calculator.formattingPreferences = formattingPreferences","","calculator.calculate(\"π\") \/\/ 3.14"]},{"text":"Live Real-World & Crypto-Currency Rates","type":"heading","level":2,"anchor":"Live-Real-World--Crypto-Currency-Rates"},{"inlineContent":[{"text":"A standard ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineCustomization"},{"text":" uses hard-coded rates for 190 real-world & crypto-currencies. You can (and should) provide SoulverCore with up-to-date rates by setting the ","type":"text"},{"type":"reference","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineCustomization\/currencyRateProvider","isActive":true},{"type":"text","text":" on your "},{"type":"reference","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineCustomization","isActive":true},{"text":" to an object that conforms to ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/CurrencyRateProvider"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"SoulverCore includes one ","type":"text"},{"isActive":true,"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/CurrencyRateProvider","type":"reference"},{"text":" you can use to fetch rates from the ","type":"text"},{"identifier":"https:\/\/www.ecb.europa.eu\/stats\/eurofxref\/","type":"reference","isActive":true},{"type":"text","text":" for 33 popular fiat currencies."}]},{"code":["\/\/\/ This is a currency rate provider that fetches 33 popular fiat currencies from the European Central Bank, no API key required","let ecbCurrencyRateProvider = ECBCurrencyRateProvider()","","\/\/\/ Create a customization with this rate provider","var customizationWithLiveCurrencyRates = EngineCustomization.standard","customizationWithLiveCurrencyRates.currencyRateProvider = ecbCurrencyRateProvider","","\/\/\/ Create a calculator that uses this customization","let calculator = Calculator(customization: customizationWithLiveCurrencyRates)","","\/\/\/ Update to the latest rates...","ecbCurrencyRateProvider.updateRates { success in","    if success {","        \/\/ The standard customization will now have access to the latest currency rates","        let result = calculator.calculate(\"10 USD in EUR\")","        print(result.stringValue)","    }","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"You can create your own object that conforms to ","type":"text"},{"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/CurrencyRateProvider","isActive":true,"type":"reference"},{"type":"text","text":" to provide rates for the currency codes you support. The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/CurrencyRateProvider"},{"type":"text","text":" protocol has a single method that returns the amount of a given currency that 1.0 USD can buy:"}]},{"type":"codeListing","code":["func rateFor(request: CurrencyRateRequest) -> Decimal? {","","    let currencyCode = request.currencyCode \/\/ EUR, GBP, BTC, etc","","    \/\/\/ - Return an up-to-date rate in the form of how much 1 USD can purchase of the requested currency (i.e 1 USD = x EUR?)","    \/\/\/ - If your rates are in terms of how much USD the requested currency can purchase (i.e 1 EUR = x USD?), remember to take the inverse by dividing 1 by your rate","            ","    return <# Currency Rate #>","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Rates are only requested from a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/CurrencyRateProvider"},{"type":"text","text":" at evaluation-time, so you don’t need to recreate or "},{"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Calculator","type":"reference","isActive":true},{"text":" with a new ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineCustomization"},{"text":" when your currency rate data source is updated. However you must reevaluate your line or expression: the latest rates for any currencies used will be fetched from your provider, if necessary.","type":"text"}],"type":"paragraph"},{"type":"heading","level":2,"anchor":"Custom-Units","text":"Custom Units"},{"inlineContent":[{"type":"text","text":"You can add custom units to an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineCustomization"},{"text":" object required by the initializer on ","type":"text"},{"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Calculator","isActive":true,"type":"reference"}],"type":"paragraph"},{"syntax":"swift","code":["\/\/\/ A good omakase EngineCustomization (the same used by Soulver.app)","var customization: EngineCustomization = .standard","","\/\/\/ Set an array of custom units defined in terms of an existing unit in SoulverCore","customization.customUnits = [","    CustomUnit(name: \"parrots\", definition: 15, equivalentUnit: .centimeters),","    CustomUnit(name: \"python\", definition: 570, equivalentUnit: .centimeters)","]","","\/\/\/ Create a Calculator using this customization","let calculator = Calculator(customization: customization)","","\/\/\/ python and parrots are now recognized as units","calculator.calculate(\"1 python in parrots\") \/\/ 38 parrots"],"type":"codeListing"},{"level":2,"text":"Custom Functions","anchor":"Custom-Functions","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The syntax of a function in SoulverCore is flexible. We support traditional C-style “func(x)” functions, Swift-style “calculate(withParameter: x)” functions, or even natural phrases like “calculate x”.","type":"text"}]},{"inlineContent":[{"type":"text","text":"You can add custom functions objects to the "},{"isActive":true,"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineCustomization","type":"reference"},{"text":" required by the initializer on ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Calculator"},{"type":"text","text":". Here is an example of a custom function that takes 1 off a given number:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["","\/\/\/ Get the default Engine Customization","var customization: EngineCustomization = .standard","","\/\/\/ A prototype expression is an example of what the user will type to invoke your function","\/\/\/ The following function will trigger for any phrase with the form 'number before x', where x is some number","","customization.customFunctions = [CustomFunction(prototypeExpression: \"number before 9\", handler: { parameters in","    ","    guard let parameterDecimalValue = parameters[0].decimalValue else {","        return EvaluationResult.none","    }","    ","    return .decimal(parameterDecimalValue - 1.0)","    ","})]","","let calculator = Calculator(customization: customization)","let result = calculator.calculate(\"number before 35\")","","print(result.stringValue) \/\/ prints '34'"]},{"type":"heading","anchor":"Variable-Declarations","level":2,"text":"Variable Declarations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A variable declaration is any phrase followed by equals and a value (i.e, “total expenses = 123”)."}]},{"inlineContent":[{"type":"text","text":"Variable declarations are off by default, but can be enabled on your "},{"type":"reference","isActive":true,"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineCustomization"},{"type":"text","text":" and used on "},{"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Calculator","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/LineCollection","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"code":["var customization: EngineCustomization = .standard","","\/\/\/ Add the variable declarations feature","customization.featureFlags.variableDeclarations = true","","\/\/\/ Use this customization with a new Calculator object","let calculator = Calculator(customization: customization)","_ = calculator.calculate(\"tax = 25%\")","let result = calculator.calculate(\"tax of $45k\") \/\/ $11,250.00",""],"syntax":"swift","type":"codeListing"},{"type":"heading","level":2,"text":"Localizations","anchor":"Localizations"},{"inlineContent":[{"text":"In addition to English, SoulverCore is fully localized into German, Russian, French, Spanish & simplified Chinese.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"The various number & date formats of these various locales are also fully supported.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Also note that non-English languages are "},{"inlineContent":[{"type":"text","text":"additive"}],"type":"emphasis"},{"text":", meaning that, for instance, a German user would be able to use both English & German syntaxes.","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/app.soulver.core\/documentation\/SoulverCore"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/GettingStarted"},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Create a calculator and customize calculation & result formatting"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/soulvercore\/gettingstarted"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/soulvercore\/gettingstarted"]}],"metadata":{"modules":[{"name":"SoulverCore"}],"roleHeading":"Article","title":"Getting Started with SoulverCore","role":"article"},"kind":"article","references":{"doc://app.soulver.core/documentation/SoulverCore/Calculator":{"title":"Calculator","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Calculator","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Calculator","kind":"identifier"}],"type":"topic","url":"\/documentation\/soulvercore\/calculator","abstract":[{"type":"text","text":"Evaluates a string based math expression"}],"kind":"symbol","navigatorTitle":[{"text":"Calculator","kind":"identifier"}],"role":"symbol"},"doc://app.soulver.core/documentation/SoulverCore/EngineCustomization":{"url":"\/documentation\/soulvercore\/enginecustomization","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineCustomization","title":"EngineCustomization","type":"topic","kind":"symbol","abstract":[{"text":"A key SoulverCore model object used to customize how you want SoulverCore to interpret expressions","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"EngineCustomization","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"EngineCustomization"}]},"doc://app.soulver.core/documentation/SoulverCore/LineCollection":{"url":"\/documentation\/soulvercore\/linecollection","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/LineCollection","title":"LineCollection","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Perform calculations across multiple lines"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LineCollection"}],"navigatorTitle":[{"text":"LineCollection","kind":"identifier"}]},"doc://app.soulver.core/documentation/SoulverCore/CurrencyRateProvider":{"url":"\/documentation\/soulvercore\/currencyrateprovider","title":"CurrencyRateProvider","abstract":[{"type":"text","text":"CurrencyRateProvider is an object that provides currency rates to be used in unit calculations"}],"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CurrencyRateProvider"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/CurrencyRateProvider","role":"symbol","navigatorTitle":[{"text":"CurrencyRateProvider","kind":"identifier"}]},"doc://app.soulver.core/documentation/SoulverCore":{"url":"\/documentation\/soulvercore","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore","title":"SoulverCore","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A powerful natural language calculation engine"}],"role":"collection"},"doc://app.soulver.core/documentation/SoulverCore/FormattingPreferences":{"type":"topic","title":"FormattingPreferences","role":"symbol","navigatorTitle":[{"text":"FormattingPreferences","kind":"identifier"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/FormattingPreferences","abstract":[{"type":"text","text":"A configuration object used to specify how you want SoulverCore to format results"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"FormattingPreferences","kind":"identifier"}],"url":"\/documentation\/soulvercore\/formattingpreferences"},"doc://app.soulver.core/documentation/SoulverCore/VariableList":{"title":"VariableList","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/VariableList","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VariableList","kind":"identifier"}],"type":"topic","url":"\/documentation\/soulvercore\/variablelist","abstract":[{"type":"text","text":"A list of variables (single words or phrases) and their values"}],"kind":"symbol","navigatorTitle":[{"text":"VariableList","kind":"identifier"}],"role":"symbol"},"https://www.ecb.europa.eu/stats/eurofxref/":{"url":"https:\/\/www.ecb.europa.eu\/stats\/eurofxref\/","identifier":"https:\/\/www.ecb.europa.eu\/stats\/eurofxref\/","title":"European Central Bank","titleInlineContent":[{"text":"European Central Bank","type":"text"}],"type":"link"},"doc://app.soulver.core/documentation/SoulverCore/EngineCustomization/currencyRateProvider":{"title":"currencyRateProvider","role":"symbol","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineCustomization\/currencyRateProvider","kind":"symbol","abstract":[{"text":"Provide an object that conforms to CurrencyRateProvider to enable live currency rates in calculations","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"currencyRateProvider"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CurrencyRateProvider","preciseIdentifier":"s:11SoulverCore20CurrencyRateProviderP"},{"text":"?","kind":"text"}],"url":"\/documentation\/soulvercore\/enginecustomization\/currencyrateprovider","type":"topic"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"},{"op":"add","path":"\/topicSections","value":null},{"op":"add","path":"\/seeAlsoSections","value":null}]}]}