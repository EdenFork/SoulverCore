{"hierarchy":{"paths":[["doc:\/\/app.soulver.core\/documentation\/SoulverCore","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineFeatureFlags"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineFeatureFlags\/seeksFutureDate","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/soulvercore\/enginefeatureflags\/seeksfuturedate"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"seeksFutureDate"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"With this flag on, all ‘ambiguous’ dates will be assumed to be in the future (i.e ‘8am’ will mean ‘8am tomorrow’, not ‘8am today’), and unit expressions of time will also resolve to a date (i.e ‘20 minutes’ will be equivalent to the expression ‘20 minutes from now’ and produce a datestamp)","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Off by default"}]}]}]}],"kind":"content"}],"metadata":{"externalID":"s:11SoulverCore18EngineFeatureFlagsV15seeksFutureDateSbvp","modules":[{"name":"SoulverCore"}],"role":"symbol","symbolKind":"property","roleHeading":"Instance Property","title":"seeksFutureDate","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"seeksFutureDate"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"seeAlsoSections":[{"identifiers":["doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineFeatureFlags\/preserveAllParsedTokenTypes","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineFeatureFlags\/allowMisplacedThousandsSeparators","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineFeatureFlags\/preferActiveTimeZoneAbbreviations","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineFeatureFlags\/functionsRequireParentheses"],"title":"Parsing features","generated":true}],"abstract":[{"text":"This is appropriate for natural language date fields where the user is scheduling an event in the future.","type":"text"}],"references":{"doc://app.soulver.core/documentation/SoulverCore/EngineFeatureFlags/preferActiveTimeZoneAbbreviations":{"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineFeatureFlags\/preferActiveTimeZoneAbbreviations","kind":"symbol","url":"\/documentation\/soulvercore\/enginefeatureflags\/preferactivetimezoneabbreviations","role":"symbol","type":"topic","title":"preferActiveTimeZoneAbbreviations","abstract":[{"text":"TimeZones are defined by a fixed offset from GMT, however some timezones are only used during certain times of the year (like a daylight savings time zone: NZST, BRST, etc). With this flag on, when you request a timezone via an abbreviation that is NOT currently in use,  then the currently active timezone will be used instead (NZDT, BST, etc)","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"preferActiveTimeZoneAbbreviations","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://app.soulver.core/documentation/SoulverCore/EngineFeatureFlags/allowMisplacedThousandsSeparators":{"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineFeatureFlags\/allowMisplacedThousandsSeparators","kind":"symbol","url":"\/documentation\/soulvercore\/enginefeatureflags\/allowmisplacedthousandsseparators","role":"symbol","title":"allowMisplacedThousandsSeparators","type":"topic","abstract":[{"type":"text","text":"With this flag on, the number ‘1,3’ in a US-standard locale will be interpretted as ‘13’."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"allowMisplacedThousandsSeparators","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://app.soulver.core/documentation/SoulverCore/EngineFeatureFlags":{"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineFeatureFlags","type":"topic","role":"symbol","url":"\/documentation\/soulvercore\/enginefeatureflags","abstract":[{"type":"text","text":"Customize the behaviour of SoulverCore’s math engine with these flags"}],"title":"EngineFeatureFlags","navigatorTitle":[{"text":"EngineFeatureFlags","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EngineFeatureFlags","kind":"identifier"}]},"doc://app.soulver.core/documentation/SoulverCore/EngineFeatureFlags/seeksFutureDate":{"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineFeatureFlags\/seeksFutureDate","kind":"symbol","url":"\/documentation\/soulvercore\/enginefeatureflags\/seeksfuturedate","role":"symbol","type":"topic","title":"seeksFutureDate","abstract":[{"text":"This is appropriate for natural language date fields where the user is scheduling an event in the future.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"seeksFutureDate","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://app.soulver.core/documentation/SoulverCore/EngineFeatureFlags/functionsRequireParentheses":{"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineFeatureFlags\/functionsRequireParentheses","kind":"symbol","url":"\/documentation\/soulvercore\/enginefeatureflags\/functionsrequireparentheses","role":"symbol","title":"functionsRequireParentheses","type":"topic","abstract":[{"text":"With this flag on, SoulverCore will require functions use parentheses, i.e. sin(30)","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"With this flag off, SoulverCore supports single parameter functions without parenthesis, like “sin 30”, “floor 10.3”, etc"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"functionsRequireParentheses","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://app.soulver.core/documentation/SoulverCore":{"url":"\/documentation\/soulvercore","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore","title":"SoulverCore","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A powerful natural language calculation engine"}],"role":"collection"},"doc://app.soulver.core/documentation/SoulverCore/EngineFeatureFlags/preserveAllParsedTokenTypes":{"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineFeatureFlags\/preserveAllParsedTokenTypes","kind":"symbol","url":"\/documentation\/soulvercore\/enginefeatureflags\/preserveallparsedtokentypes","role":"symbol","type":"topic","title":"preserveAllParsedTokenTypes","abstract":[{"text":"With this off, for example, the string ‘Paris’ will be a plain word comment token in the TokenList (unless it’s actually used in an expression like ‘time in Paris’).","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"preserveAllParsedTokenTypes","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}}}